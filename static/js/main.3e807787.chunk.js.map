{"version":3,"sources":["components/counter.jsx","components/counters.jsx","components/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","counter","onIncrease","onDecrease","onDelete","console","log","buttonClass","value","className","onClick","disabled","id","Counters","counters","onReset","map","c","Navbar","noOfCounter","href","App","state","handleDelete","filter","setState","handleIncrease","index","indexOf","handleDecrease","handleReset","prevProps","prevState","this","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e807787.chunk.js","sourcesContent":["import './counter.css'\r\n\r\nconst Counter = ({counter, onIncrease, onDecrease, onDelete}) => {\r\n  console.log('counter - render')\r\n  const buttonClass = counter.value ? 'btn-primary' : 'btn-warning'\r\n  return (\r\n    <div className=\"row m-3\">\r\n      <button className={`btn ${buttonClass} btn-sm col-1 m-2`}>{counter.value}</button>\r\n      <button onClick={() => onIncrease(counter)} className=\"btn btn-outline-success btn-sm col-1 m-2\">Increase</button>\r\n      <button disabled={!counter.value} onClick={() => onDecrease(counter)} className=\"btn btn-outline-info btn-sm col-1 m-2\">Decrease</button>\r\n      <button onClick={() => onDelete(counter.id)} className=\"btn btn-outline-danger btn-sm col-1 m-2\">Delete</button>\r\n    </div>\r\n  ) \r\n}\r\n \r\nexport default Counter;\r\n","import Counter from './counter'\r\nimport './counters.css'\r\n\r\nconst Counters = ({counters, onIncrease, onDecrease,  onReset, onDelete}) => {\r\n  console.log('Counters - render')\r\n  return ( \r\n    <div className=\"container main\">\r\n      <button className=\"btn btn-secondary btn-md\" onClick={onReset}>Reset</button>\r\n      {\r\n        counters.map(c => {\r\n          return(\r\n            <Counter \r\n              key={c.id} \r\n              counter={c} \r\n              onDelete={onDelete} \r\n              onIncrease={onIncrease} \r\n              onDecrease={onDecrease}/>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Counters;\r\n","const Navbar = ({noOfCounter}) => {\r\n  console.log('Navbar - render')\r\n  return (  \r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      <a href=\"https://getbootstrap.com\" className=\"navbar-brand\">\r\n      Navbar <span className=\"badge rounded-pill bg-primary\">{noOfCounter}</span>\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n \r\nexport default Navbar;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Counters from './components/counters';\nimport Navbar from './components/navbar';\n\nclass App extends Component {\n  state = { \n    counters: [\n      {id: 1, value: 2},\n      {id: 2, value: 0},\n      {id: 3, value: 0},\n      {id: 4, value: 4}\n    ]\n  }\n\n  constructor(){\n    super()\n    console.log('App - constructor')\n  }\n\n  componentDidMount(){\n    console.log('App - mount')\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    console.log('App - updated')\n    console.log('prevProps', prevProps)\n    console.log('prevState', prevState)\n  }\n\n  componentWillUnmount(){\n    console.log('App - unmount')\n  }\n\n  handleDelete = (id) => {\n    let counters = this.state.counters.filter(c => c.id !== id)\n    this.setState({\n      counters\n    })\n  }\n\n  handleIncrease = (counter) => {\n    const counters = [...this.state.counters]\n    const index = counters.indexOf(counter)\n    counters[index].value++\n    this.setState({\n      counters\n    })\n  }\n\n  handleDecrease = (counter) => {\n    const counters = [...this.state.counters]\n    const index = counters.indexOf(counter)\n    counters[index].value--\n    this.setState({\n      counters\n    })\n  }\n\n  handleReset = () => {\n    let counters = this.state.counters.map(c => {\n      c.value = 0\n      return c\n    })\n    this.setState({\n      counters\n    })\n  }\n\n  render() { \n    console.log('App - render')\n    const {counters} = this.state\n    return ( \n      <>\n        <Navbar noOfCounter={counters.filter(c => c.value > 0).length}/>\n        <main className=\"container\">\n          <Counters \n            onIncrease = {this.handleIncrease}\n            onDecrease = {this.handleDecrease}\n            onDelete = {this.handleDelete}\n            onReset = {this.handleReset}\n            counters={counters}/>\n        </main>\n      </>\n    );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}